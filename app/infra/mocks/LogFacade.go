// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// LogFacade is an autogenerated mock type for the LogFacade type
type LogFacade struct {
	mock.Mock
}

// Debugf provides a mock function with given fields: ctx, msg, args
func (_m *LogFacade) Debugf(ctx context.Context, msg string, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, ctx, msg)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// Errorf provides a mock function with given fields: ctx, err, msg, args
func (_m *LogFacade) Errorf(ctx context.Context, err error, msg string, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, ctx, err, msg)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// Infof provides a mock function with given fields: ctx, msg, args
func (_m *LogFacade) Infof(ctx context.Context, msg string, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, ctx, msg)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// NewLogFacade creates a new instance of LogFacade. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewLogFacade(t interface {
	mock.TestingT
	Cleanup(func())
}) *LogFacade {
	mock := &LogFacade{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
